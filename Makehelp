#!/usr/bin/env -S gawk -f

BEGIN {
  use_theme_candyland()
  print_usage()
  # split targets and options
  FS = "(:.*##|?=)"
}

# options::  <var> ?= <default>
/^[a-zA-Z_]+\s\?=.*/ {
  printf("  %s%-20s%s%s (default:%s%s%s%s%s)%s\n",
    fg_option, $1, c_reset, fg_comment, c_reset,
    fg_value, $2, c_reset, fg_comment, c_reset)
}

# headings:: ##@ <subject>
/^##@/ { printf("\n%s%s:%s\n", fg_heading, substr($0, 5), c_reset) }

## subheadings:: ###@ <subject>
/^###@/ { printf("\n%s%s:%s\n", fg_subheading, substr($0, 6), c_reset) }

## targets:: <target>: ## <description>
/^[a-zA-Z_0-9\-\/]+:.*?##/ {
  printf("  %s%-20s%s%s%s%s\n", fg_target, $1, c_reset, fg_comment, $2, c_reset)
}

function print_usage() {
  printf("\n%sUsage:%s\n  %smake%s", fg_heading, c_reset, fg_binary, c_reset)
  printf(" %s[ command ]%s", fg_target, c_reset)
  printf(" %s[ option=%s%svalue%s%s ]...%s\n", fg_option,
    c_reset, fg_value, c_reset, fg_option, c_reset)
}

function use_theme_cargo() {
  c_reset = "\33[0m"
  c_bold = "\33[1m"
  c_green = "\33[32m"
  c_blue = "\33[34m"
  c_cyan = "\33[36m"
  c_white = "\33[37m"

  fg_binary = sprintf("%s%s", c_bold, c_cyan)
  fg_heading = sprintf("%s%s", c_bold, c_green)
  fg_subheading = sprintf("%s%s", c_reset, c_green)
  fg_target = sprintf("%s%s", c_bold, c_cyan)
  fg_option = sprintf("%s%s", c_bold, c_cyan)
  fg_value = sprintf("%s%s", c_bold, c_blue)
  fg_comment = sprintf("%s%s", c_bold, c_white)
}

func use_theme_candyland() {
  c_reset = "\33[0m"
  c_bold = "\33[1m"
  c_italic = "\33[3m"
  c_green = "\33[32m"
  c_blue = "\33[34m"
  c_white = "\33[37m"
  c_yellow = "\33[33m"
  c_magenta = "\33[35m"

  fg_binary = sprintf("%s%s", c_bold, c_yellow)
  fg_heading = sprintf("%s%s", c_bold, c_blue)
  fg_subheading = sprintf("%s%s", c_reset, c_blue)
  fg_target = sprintf("%s%s", c_reset, c_green)
  fg_option = sprintf("%s%s", c_reset, c_magenta)
  fg_value = sprintf("%s%s", c_bold, c_magenta)
  fg_comment = sprintf("%s%s", c_italic, c_white)
}
